node n1 {
    type router
    model router
    network-config {
	hostname n1
	!
	interface eth2
	 ip address 192.168.9.1/24
	!
	interface eth1
	 ip address 192.168.8.2/30
	!
	interface eth0
	 ip address 192.168.0.1/30
	!
    }
    canvas c1
    iconcoords {248.0 264.0}
    labelcoords {248.0 296.0}
    interface-peer {eth0 n2}
    interface-peer {eth1 n7}
    interface-peer {eth2 n9}
    custom-config {
	custom-config-id service:StaticRoute
	custom-command StaticRoute
	config {
	files=('staticroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:StaticRoute:staticroute.sh
	custom-command staticroute.sh
	config {
	#!/bin/sh
	# auto-generated by StaticRoute service (utility.py)
	#
	# NOTE: this service must be customized to be of any use
	#       Below are samples that you can uncomment and edit.
	#
	#/sbin/ip route add 10.9.8.0/24 via 192.168.0.1
	#/sbin/ip route add 10.9.8.0/24 via 192.168.8.1
	#/sbin/ip route add 10.9.8.0/24 via 192.168.9.1
	/sbin/ip route add 192.168.11.0/21 via 192.168.0.2
	
	}
    }
    custom-config {
	custom-config-id service:DHCP
	custom-command DHCP
	config {
	files=('/etc/dhcp/dhcpd.conf', )
	}
    }
    custom-config {
	custom-config-id service:DHCP:/etc/dhcp/dhcpd.conf
	custom-command /etc/dhcp/dhcpd.conf
	config {
	# auto-generated by DHCP service (utility.py)
	# NOTE: move these option lines into the desired pool { } block(s) below
	#option domain-name "test.com";
	#option domain-name-servers 10.0.0.1;
	#option routers 10.0.0.1;
	
	log-facility local6;
	
	default-lease-time 600;
	max-lease-time 7200;
	
	ddns-update-style none;
	
	subnet 192.168.9.0 netmask 255.255.255.0 {
	  pool {
	    range 192.168.9.127 192.168.9.254;
	    default-lease-time 600;
	    option routers 192.168.9.1;
	  }
	}
	
	
	
	}
    }
    services {zebra vtysh IPForward StaticRoute DHCP}
}

node n2 {
    type router
    model router
    network-config {
	hostname n2
	!
	interface eth2
	 ip address 192.168.10.1/24
	!
	interface eth1
	 ip address 192.168.1.1/30
	!
	interface eth0
	 ip address 192.168.0.2/30
	!
    }
    canvas c1
    iconcoords {345.0 154.0}
    labelcoords {345.0 186.0}
    interface-peer {eth0 n1}
    interface-peer {eth1 n3}
    interface-peer {eth2 n10}
    custom-config {
	custom-config-id service:StaticRoute
	custom-command StaticRoute
	config {
	files=('staticroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:StaticRoute:staticroute.sh
	custom-command staticroute.sh
	config {
	#!/bin/sh
	# auto-generated by StaticRoute service (utility.py)
	#
	# NOTE: this service must be customized to be of any use
	#       Below are samples that you can uncomment and edit.
	#
	#/sbin/ip route add 10.9.8.0/24 via 192.168.0.1
	#/sbin/ip route add 10.9.8.0/24 via 192.168.1.1
	
	/sbin/ip route add 192.168.11.0/21 via 192.168.1.2
	
	}
    }
    custom-config {
	custom-config-id service:DHCP
	custom-command DHCP
	config {
	files=('/etc/dhcp/dhcpd.conf', )
	}
    }
    custom-config {
	custom-config-id service:DHCP:/etc/dhcp/dhcpd.conf
	custom-command /etc/dhcp/dhcpd.conf
	config {
	# auto-generated by DHCP service (utility.py)
	# NOTE: move these option lines into the desired pool { } block(s) below
	#option domain-name "test.com";
	#option domain-name-servers 10.0.0.1;
	#option routers 10.0.0.1;
	
	log-facility local6;
	
	default-lease-time 600;
	max-lease-time 7200;
	
	ddns-update-style none;
	
	
	subnet 192.168.10.0 netmask 255.255.255.0 {
	  pool {
	    range 192.168.10.127 192.168.10.254;
	    default-lease-time 600;
	    option routers 192.168.10.1;
	  }
	}
	
	
	
	
	
	}
    }
    custom-config {
	custom-config-id service:zebra
	custom-command zebra
	config {
	files=('/usr/local/etc/quagga/Quagga.conf', 'quaggaboot.sh', '/usr/local/etc/quagga/vtysh.conf', )
	}
    }
    custom-config {
	custom-config-id service:zebra:/usr/local/etc/quagga/Quagga.conf
	custom-command /usr/local/etc/quagga/Quagga.conf
	config {
	interface eth0
		ip address 192.168.0.2/30
	!
	interface eth1
		ip address 192.168.1.1/30
	!
	interface eth2
		ip address 192.168.10.1/24
	!
	
	}
    }
    services {zebra vtysh IPForward StaticRoute DHCP}
}

node n3 {
    type router
    model router
    network-config {
	hostname n3
	!
	interface eth2
	 ip address 192.168.11.1/24
	!
	interface eth1
	 ip address 192.168.2.1/30
	!
	interface eth0
	 ip address 192.168.1.2/30
	!
    }
    canvas c1
    iconcoords {589.0 160.0}
    labelcoords {589.0 192.0}
    interface-peer {eth0 n2}
    interface-peer {eth1 n4}
    interface-peer {eth2 n11}
    custom-config {
	custom-config-id service:StaticRoute
	custom-command StaticRoute
	config {
	files=('staticroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:StaticRoute:staticroute.sh
	custom-command staticroute.sh
	config {
	#!/bin/sh
	# auto-generated by StaticRoute service (utility.py)
	#
	# NOTE: this service must be customized to be of any use
	#       Below are samples that you can uncomment and edit.
	#
	#/sbin/ip route add 10.9.8.0/24 via 192.168.1.1
	#/sbin/ip route add 10.9.8.0/24 via 192.168.2.1
	/sbin/ip route add 192.168.11.0/21 via 192.168.2.2
	
	
	}
    }
    custom-config {
	custom-config-id service:DHCP
	custom-command DHCP
	config {
	files=('/etc/dhcp/dhcpd.conf', )
	}
    }
    custom-config {
	custom-config-id service:DHCP:/etc/dhcp/dhcpd.conf
	custom-command /etc/dhcp/dhcpd.conf
	config {
	# auto-generated by DHCP service (utility.py)
	# NOTE: move these option lines into the desired pool { } block(s) below
	#option domain-name "test.com";
	#option domain-name-servers 10.0.0.1;
	#option routers 10.0.0.1;
	
	log-facility local6;
	
	default-lease-time 600;
	max-lease-time 7200;
	
	ddns-update-style none;
	
	subnet 192.168.11.0 netmask 255.255.255.0 {
	  pool {
	    range 192.168.11.127 192.168.11.254;
	    default-lease-time 600;
	    option routers 192.168.11.1;
	  }
	}
	
	
	
	}
    }
    custom-config {
	custom-config-id service:zebra
	custom-command zebra
	config {
	files=('/usr/local/etc/quagga/Quagga.conf', 'quaggaboot.sh', '/usr/local/etc/quagga/vtysh.conf', )
	}
    }
    custom-config {
	custom-config-id service:zebra:/usr/local/etc/quagga/Quagga.conf
	custom-command /usr/local/etc/quagga/Quagga.conf
	config {
	interface eth0
		ip address 192.168.1.2/30
	!
	interface eth1
		ip address 192.168.2.1/30
	!
	interface eth2
		ip address 192.168.11.1/24
	!
	
	}
    }
    services {zebra vtysh IPForward StaticRoute DHCP}
}

node n4 {
    type router
    model router
    network-config {
	hostname n4
	!
	interface eth2
	 ip address 192.168.12.1/24
	!
	interface eth1
	 ip address 192.168.3.1/30
	!
	interface eth0
	 ip address 192.168.2.2/30
	!
    }
    canvas c1
    iconcoords {696.0 270.0}
    labelcoords {696.0 302.0}
    interface-peer {eth0 n3}
    interface-peer {eth1 n5}
    interface-peer {eth2 n12}
    custom-config {
	custom-config-id service:StaticRoute
	custom-command StaticRoute
	config {
	files=('staticroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:StaticRoute:staticroute.sh
	custom-command staticroute.sh
	config {
	#!/bin/sh
	# auto-generated by StaticRoute service (utility.py)
	#
	# NOTE: this service must be customized to be of any use
	#       Below are samples that you can uncomment and edit.
	#
	#/sbin/ip route add 10.9.8.0/24 via 192.168.2.1
	#/sbin/ip route add 10.9.8.0/24 via 192.168.3.1
	#/sbin/ip route add 10.9.8.0/24 via 192.168.12.1
	
	/sbin/ip route add 192.168.11.0/21 via 192.168.3.2
	
	}
    }
    custom-config {
	custom-config-id service:DHCP
	custom-command DHCP
	config {
	files=('/etc/dhcp/dhcpd.conf', )
	}
    }
    custom-config {
	custom-config-id service:DHCP:/etc/dhcp/dhcpd.conf
	custom-command /etc/dhcp/dhcpd.conf
	config {
	# auto-generated by DHCP service (utility.py)
	# NOTE: move these option lines into the desired pool { } block(s) below
	#option domain-name "test.com";
	#option domain-name-servers 10.0.0.1;
	#option routers 10.0.0.1;
	
	log-facility local6;
	
	default-lease-time 600;
	max-lease-time 7200;
	
	ddns-update-style none;
	
	subnet 192.168.12.0 netmask 255.255.255.0 {
	  pool {
	    range 192.168.12.127 192.168.12.254;
	    default-lease-time 600;
	    option routers 192.168.12.1;
	  }
	}
	
	
	
	}
    }
    services {zebra vtysh IPForward StaticRoute DHCP}
}

node n5 {
    type router
    model router
    network-config {
	hostname n5
	!
	interface eth3
	 ip address 192.168.13.1/24
	!
	interface eth2
	 ip address 192.168.7.2/30
	!
	interface eth1
	 ip address 192.168.4.1/30
	!
	interface eth0
	 ip address 192.168.3.2/30
	!
    }
    canvas c1
    iconcoords {685.0 417.0}
    labelcoords {685.0 449.0}
    interface-peer {eth0 n4}
    interface-peer {eth1 n6}
    interface-peer {eth2 n8}
    interface-peer {eth3 n13}
    custom-config {
	custom-config-id service:StaticRoute
	custom-command StaticRoute
	config {
	files=('staticroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:StaticRoute:staticroute.sh
	custom-command staticroute.sh
	config {
	#!/bin/sh
	# auto-generated by StaticRoute service (utility.py)
	#
	# NOTE: this service must be customized to be of any use
	#       Below are samples that you can uncomment and edit.
	#
	#/sbin/ip route add 10.9.8.0/24 via 192.168.3.1
	#/sbin/ip route add 10.9.8.0/24 via 192.168.4.1
	#/sbin/ip route add 10.9.8.0/24 via 192.168.7.1
	#/sbin/ip route add 10.9.8.0/24 via 192.168.13.1
	/sbin/ip route add 192.168.15.0/24 via 192.168.7.1
	/sbin/ip route add 192.168.11.0/21 via 192.168.4.2
	
	
	}
    }
    custom-config {
	custom-config-id service:DHCP
	custom-command DHCP
	config {
	files=('/etc/dhcp/dhcpd.conf', )
	}
    }
    custom-config {
	custom-config-id service:DHCP:/etc/dhcp/dhcpd.conf
	custom-command /etc/dhcp/dhcpd.conf
	config {
	# auto-generated by DHCP service (utility.py)
	# NOTE: move these option lines into the desired pool { } block(s) below
	#option domain-name "test.com";
	#option domain-name-servers 10.0.0.1;
	#option routers 10.0.0.1;
	
	log-facility local6;
	
	default-lease-time 600;
	max-lease-time 7200;
	
	ddns-update-style none;
	
	subnet 192.168.13.0 netmask 255.255.255.0 {
	  pool {
	    range 192.168.13.127 192.168.13.254;
	    default-lease-time 600;
	    option routers 192.168.13.1;
	  }
	}
	
	
	
	}
    }
    services {zebra vtysh IPForward StaticRoute DHCP}
}

node n6 {
    type router
    model router
    network-config {
	hostname n6
	!
	interface eth2
	 ip address 192.168.14.1/24
	!
	interface eth1
	 ip address 192.168.5.1/30
	!
	interface eth0
	 ip address 192.168.4.2/30
	!
    }
    canvas c1
    iconcoords {481.0 448.0}
    labelcoords {481.0 480.0}
    interface-peer {eth0 n5}
    interface-peer {eth1 n7}
    interface-peer {eth2 n14}
    custom-config {
	custom-config-id service:StaticRoute
	custom-command StaticRoute
	config {
	files=('staticroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:StaticRoute:staticroute.sh
	custom-command staticroute.sh
	config {
	#!/bin/sh
	# auto-generated by StaticRoute service (utility.py)
	#
	# NOTE: this service must be customized to be of any use
	#       Below are samples that you can uncomment and edit.
	#
	#/sbin/ip route add 10.9.8.0/24 via 192.168.4.1
	#/sbin/ip route add 10.9.8.0/24 via 192.168.5.1
	#/sbin/ip route add 10.9.8.0/24 via 192.168.14.1
	/sbin/ip route add 192.168.11.0/21 via 192.168.5.2
	
	}
    }
    custom-config {
	custom-config-id service:DHCP
	custom-command DHCP
	config {
	files=('/etc/dhcp/dhcpd.conf', )
	}
    }
    custom-config {
	custom-config-id service:DHCP:/etc/dhcp/dhcpd.conf
	custom-command /etc/dhcp/dhcpd.conf
	config {
	# auto-generated by DHCP service (utility.py)
	# NOTE: move these option lines into the desired pool { } block(s) below
	#option domain-name "test.com";
	#option domain-name-servers 10.0.0.1;
	#option routers 10.0.0.1;
	
	log-facility local6;
	
	default-lease-time 600;
	max-lease-time 7200;
	
	ddns-update-style none;
	
	subnet 192.168.14.0 netmask 255.255.255.0 {
	  pool {
	    range 192.168.14.127 192.168.14.254;
	    default-lease-time 600;
	    option routers 192.168.14.1;
	  }
	}
	
	
	
	}
    }
    services {zebra vtysh IPForward StaticRoute DHCP}
}

node n7 {
    type router
    model router
    network-config {
	hostname n7
	!
	interface eth3
	 ip address 192.168.16.1/24
	!
	interface eth2
	 ip address 192.168.8.1/30
	!
	interface eth1
	 ip address 192.168.6.1/30
	!
	interface eth0
	 ip address 192.168.5.2/30
	!
    }
    canvas c1
    iconcoords {273.0 424.0}
    labelcoords {273.0 456.0}
    interface-peer {eth0 n6}
    interface-peer {eth1 n8}
    interface-peer {eth2 n1}
    interface-peer {eth3 n15}
    custom-config {
	custom-config-id service:StaticRoute
	custom-command StaticRoute
	config {
	files=('staticroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:StaticRoute:staticroute.sh
	custom-command staticroute.sh
	config {
	#!/bin/sh
	# auto-generated by StaticRoute service (utility.py)
	#
	# NOTE: this service must be customized to be of any use
	#       Below are samples that you can uncomment and edit.
	#
	#/sbin/ip route add 10.9.8.0/24 via 192.168.5.1
	#/sbin/ip route add 10.9.8.0/24 via 192.168.6.1
	#/sbin/ip route add 10.9.8.0/24 via 192.168.8.1
	#/sbin/ip route add 10.9.8.0/24 via 192.168.16.1
	/sbin/ip route add 192.168.11.0/21 via 192.168.8.2
	
	}
    }
    custom-config {
	custom-config-id service:DHCP
	custom-command DHCP
	config {
	files=('/etc/dhcp/dhcpd.conf', )
	}
    }
    custom-config {
	custom-config-id service:DHCP:/etc/dhcp/dhcpd.conf
	custom-command /etc/dhcp/dhcpd.conf
	config {
	# auto-generated by DHCP service (utility.py)
	# NOTE: move these option lines into the desired pool { } block(s) below
	#option domain-name "test.com";
	#option domain-name-servers 10.0.0.1;
	#option routers 10.0.0.1;
	
	log-facility local6;
	
	default-lease-time 600;
	max-lease-time 7200;
	
	ddns-update-style none;
	
	subnet 192.168.16.0 netmask 255.255.255.0 {
	  pool {
	    range 192.168.16.127 192.168.16.254;
	    default-lease-time 600;
	    option routers 192.168.16.1;
	  }
	}
	
	
	
	}
    }
    services {zebra vtysh IPForward StaticRoute DHCP}
}

node n8 {
    type router
    model router
    network-config {
	hostname n8
	!
	interface eth2
	 ip address 192.168.15.1/24
	!
	interface eth1
	 ip address 192.168.7.1/30
	!
	interface eth0
	 ip address 192.168.6.2/30
	!
    }
    canvas c1
    iconcoords {466.0 332.0}
    labelcoords {466.0 364.0}
    interface-peer {eth0 n7}
    interface-peer {eth1 n5}
    interface-peer {eth2 n16}
    custom-config {
	custom-config-id service:StaticRoute
	custom-command StaticRoute
	config {
	files=('staticroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:StaticRoute:staticroute.sh
	custom-command staticroute.sh
	config {
	#!/bin/sh
	# auto-generated by StaticRoute service (utility.py)
	#
	# NOTE: this service must be customized to be of any use
	#       Below are samples that you can uncomment and edit.
	#
	#/sbin/ip route add 10.9.8.0/24 via 192.168.6.1
	#/sbin/ip route add 10.9.8.0/24 via 192.168.7.1
	#/sbin/ip route add 10.9.8.0/24 via 192.168.15.1
	/sbin/ip route add 192.168.11.0/21 via 192.168.6.1
	
	}
    }
    custom-config {
	custom-config-id service:DHCP
	custom-command DHCP
	config {
	files=('/etc/dhcp/dhcpd.conf', )
	}
    }
    custom-config {
	custom-config-id service:DHCP:/etc/dhcp/dhcpd.conf
	custom-command /etc/dhcp/dhcpd.conf
	config {
	# auto-generated by DHCP service (utility.py)
	# NOTE: move these option lines into the desired pool { } block(s) below
	#option domain-name "test.com";
	#option domain-name-servers 10.0.0.1;
	#option routers 10.0.0.1;
	
	log-facility local6;
	
	default-lease-time 600;
	max-lease-time 7200;
	
	ddns-update-style none;
	
	subnet 192.168.15.0 netmask 255.255.255.0 {
	  pool {
	    range 192.168.15.127 192.168.15.254;
	    default-lease-time 600;
	    option routers 192.168.15.1;
	  }
	}
	
	
	
	}
    }
    services {zebra vtysh IPForward StaticRoute DHCP}
}

node n9 {
    type lanswitch
    network-config {
	hostname n9
	!
    }
    canvas c1
    iconcoords {109.0 252.0}
    labelcoords {109.0 276.0}
    interface-peer {e0 n1}
    interface-peer {e1 n18}
}

node n10 {
    type lanswitch
    network-config {
	hostname n10
	!
    }
    canvas c1
    iconcoords {280.0 97.0}
    labelcoords {280.0 121.0}
    interface-peer {e0 n2}
    interface-peer {e1 n17}
}

node n11 {
    type lanswitch
    network-config {
	hostname n11
	!
    }
    canvas c1
    iconcoords {661.0 59.0}
    labelcoords {661.0 83.0}
    interface-peer {e0 n3}
    interface-peer {e1 n19}
}

node n12 {
    type lanswitch
    network-config {
	hostname n12
	!
    }
    canvas c1
    iconcoords {802.0 237.0}
    labelcoords {802.0 261.0}
    interface-peer {e0 n4}
    interface-peer {e1 n20}
}

node n13 {
    type lanswitch
    network-config {
	hostname n13
	!
    }
    canvas c1
    iconcoords {764.0 441.0}
    labelcoords {764.0 465.0}
    interface-peer {e0 n5}
    interface-peer {e1 n21}
}

node n14 {
    type lanswitch
    network-config {
	hostname n14
	!
    }
    canvas c1
    iconcoords {492.0 507.0}
    labelcoords {492.0 531.0}
    interface-peer {e0 n6}
    interface-peer {e1 n22}
}

node n15 {
    type lanswitch
    network-config {
	hostname n15
	!
    }
    canvas c1
    iconcoords {206.0 460.0}
    labelcoords {206.0 484.0}
    interface-peer {e0 n7}
    interface-peer {e1 n24}
}

node n16 {
    type lanswitch
    network-config {
	hostname n16
	!
    }
    canvas c1
    iconcoords {466.0 280.0}
    labelcoords {466.0 304.0}
    interface-peer {e0 n8}
    interface-peer {e1 n23}
}

node n17 {
    type router
    model PC
    network-config {
	hostname n17
	!
	interface eth0
	!
    }
    canvas c1
    iconcoords {175.0 73.0}
    labelcoords {175.0 105.0}
    interface-peer {eth0 n10}
    services {DHCPClient}
}

node n18 {
    type router
    model PC
    network-config {
	hostname n18
	!
	interface eth0
	!
    }
    canvas c1
    iconcoords {48.0 190.0}
    labelcoords {48.0 222.0}
    interface-peer {eth0 n9}
    services {DHCPClient}
}

node n19 {
    type router
    model PC
    network-config {
	hostname n19
	!
	interface eth0
	!
    }
    canvas c1
    iconcoords {718.0 65.0}
    labelcoords {718.0 97.0}
    interface-peer {eth0 n11}
    services {DHCPClient}
}

node n20 {
    type router
    model PC
    network-config {
	hostname n20
	!
	interface eth0
	!
    }
    canvas c1
    iconcoords {847.0 279.0}
    labelcoords {847.0 311.0}
    interface-peer {eth0 n12}
    services {DHCPClient}
}

node n21 {
    type router
    model PC
    network-config {
	hostname n21
	!
	interface eth0
	!
    }
    canvas c1
    iconcoords {810.0 491.0}
    labelcoords {810.0 523.0}
    interface-peer {eth0 n13}
    services {DHCPClient}
}

node n22 {
    type router
    model PC
    network-config {
	hostname n22
	!
	interface eth0
	!
    }
    canvas c1
    iconcoords {507.0 564.0}
    labelcoords {507.0 596.0}
    interface-peer {eth0 n14}
    services {DHCPClient}
}

node n23 {
    type router
    model PC
    network-config {
	hostname n23
	!
	interface eth0
	!
    }
    canvas c1
    iconcoords {570.0 252.0}
    labelcoords {570.0 284.0}
    interface-peer {eth0 n16}
    services {DHCPClient}
}

node n24 {
    type router
    model PC
    network-config {
	hostname n24
	!
	interface eth0
	!
    }
    canvas c1
    iconcoords {106.0 480.0}
    labelcoords {106.0 512.0}
    interface-peer {eth0 n15}
    services {DHCPClient}
}

link l1 {
    nodes {n1 n2}
    bandwidth 0
}

link l2 {
    nodes {n2 n3}
    bandwidth 0
}

link l3 {
    nodes {n3 n4}
    bandwidth 0
}

link l4 {
    nodes {n4 n5}
    bandwidth 0
}

link l5 {
    nodes {n5 n6}
    bandwidth 0
}

link l6 {
    nodes {n6 n7}
    bandwidth 0
}

link l7 {
    nodes {n7 n8}
    bandwidth 0
}

link l8 {
    nodes {n8 n5}
    bandwidth 0
}

link l9 {
    nodes {n7 n1}
    bandwidth 0
}

link l10 {
    nodes {n9 n1}
    bandwidth 0
}

link l11 {
    nodes {n2 n10}
    bandwidth 0
}

link l12 {
    nodes {n3 n11}
    bandwidth 0
}

link l13 {
    nodes {n4 n12}
    bandwidth 0
}

link l14 {
    nodes {n5 n13}
    bandwidth 0
}

link l15 {
    nodes {n6 n14}
    bandwidth 0
}

link l16 {
    nodes {n8 n16}
    bandwidth 0
}

link l17 {
    nodes {n7 n15}
    bandwidth 0
}

link l18 {
    nodes {n17 n10}
    bandwidth 0
}

link l19 {
    nodes {n18 n9}
    bandwidth 0
}

link l20 {
    nodes {n19 n11}
    bandwidth 0
}

link l21 {
    nodes {n20 n12}
    bandwidth 0
}

link l22 {
    nodes {n21 n13}
    bandwidth 0
}

link l23 {
    nodes {n22 n14}
    bandwidth 0
}

link l24 {
    nodes {n24 n15}
    bandwidth 0
}

link l25 {
    nodes {n16 n23}
    bandwidth 0
}

canvas c1 {
    name {Canvas1}
}

option global {
    interface_names yes
    ip_addresses yes
    ipv6_addresses no
    node_labels no
    link_labels no
    show_api no
    background_images no
    annotations no
    grid yes
    traffic_start 0
}

option session {
}

