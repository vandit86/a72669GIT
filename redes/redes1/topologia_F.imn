node n1 {
    type hub
    network-config {
	hostname n1
	!
    }
    canvas c1
    iconcoords {129.0 180.0}
    labelcoords {129.0 204.0}
    interface-peer {e0 n6}
    interface-peer {e1 n7}
    interface-peer {e2 n26}
}

node n2 {
    type lanswitch
    network-config {
	hostname n2
	!
    }
    canvas c1
    iconcoords {170.0 490.0}
    labelcoords {170.0 514.0}
    interface-peer {e0 n8}
    interface-peer {e1 n9}
    interface-peer {e2 n10}
    interface-peer {e3 n29}
}

node n3 {
    type lanswitch
    network-config {
	hostname n3
	!
    }
    canvas c1
    iconcoords {644.0 497.0}
    labelcoords {644.0 521.0}
    interface-peer {e0 n11}
    interface-peer {e1 n12}
    interface-peer {e2 n13}
    interface-peer {e4 n28}
    interface-peer {e3 n25}
}

node n4 {
    type lanswitch
    network-config {
	hostname n4
	!
    }
    canvas c1
    iconcoords {683.0 159.0}
    labelcoords {683.0 183.0}
    interface-peer {e0 n16}
    interface-peer {e1 n17}
    interface-peer {e2 n18}
    interface-peer {e3 n19}
    interface-peer {e4 n24}
    interface-peer {e5 n5}
    interface-peer {e6 n27}
}

node n5 {
    type lanswitch
    network-config {
	hostname n5
	!
    }
    canvas c1
    iconcoords {673.0 280.0}
    labelcoords {673.0 304.0}
    interface-peer {e0 n23}
    interface-peer {e1 n22}
    interface-peer {e2 n21}
    interface-peer {e3 n20}
    interface-peer {e4 n4}
}

node n6 {
    type router
    model PC
    network-config {
	hostname n6
	!
	interface eth0
	 ip address 10.0.3.20/24
	!
    }
    canvas c1
    iconcoords {45.0 121.0}
    labelcoords {45.0 153.0}
    interface-peer {eth0 n1}
}

node n7 {
    type router
    model PC
    network-config {
	hostname n7
	!
	interface eth0
	 ip address 10.0.3.21/24
	!
    }
    canvas c1
    iconcoords {39.0 238.0}
    labelcoords {39.0 270.0}
    interface-peer {eth0 n1}
}

node n8 {
    type router
    model PC
    network-config {
	hostname n8
	!
	interface eth0
	 ip address 10.0.4.20/24
	!
    }
    canvas c1
    iconcoords {34.0 526.0}
    labelcoords {34.0 558.0}
    interface-peer {eth0 n2}
}

node n9 {
    type router
    model PC
    network-config {
	hostname n9
	!
	interface eth0
	 ip address 10.0.4.21/24
	!
    }
    canvas c1
    iconcoords {148.0 577.0}
    labelcoords {148.0 609.0}
    interface-peer {eth0 n2}
}

node n10 {
    type router
    model PC
    network-config {
	hostname n10
	!
	interface eth0
	 ip address 10.0.4.22/24
	!
    }
    canvas c1
    iconcoords {283.0 591.0}
    labelcoords {283.0 623.0}
    interface-peer {eth0 n2}
}

node n11 {
    type router
    model PC
    network-config {
	hostname n11
	!
	interface eth0
	 ip address 10.0.2.20/24
	!
    }
    canvas c1
    iconcoords {514.0 533.0}
    labelcoords {514.0 565.0}
    interface-peer {eth0 n3}
}

node n12 {
    type router
    model PC
    network-config {
	hostname n12
	!
	interface eth0
	 ip address 10.0.2.21/24
	!
    }
    canvas c1
    iconcoords {587.0 572.0}
    labelcoords {587.0 604.0}
    interface-peer {eth0 n3}
}

node n13 {
    type router
    model PC
    network-config {
	hostname n13
	!
	interface eth0
	 ip address 10.0.2.22/24
	!
    }
    canvas c1
    iconcoords {659.0 602.0}
    labelcoords {659.0 634.0}
    interface-peer {eth0 n3}
}

node n14 {
    type router
    model PC
    network-config {
	hostname n14
	!
	interface eth0
	 ip address 10.0.2.24/24
	!
    }
    canvas c1
    iconcoords {882.0 497.0}
    labelcoords {882.0 529.0}
    interface-peer {eth0 n25}
}

node n15 {
    type router
    model PC
    network-config {
	hostname n15
	!
	interface eth0
	 ip address 10.0.2.23/24
	!
    }
    canvas c1
    iconcoords {860.0 570.0}
    labelcoords {860.0 602.0}
    interface-peer {eth0 n25}
}

node n16 {
    type router
    model PC
    network-config {
	hostname n16
	!
	interface eth0
	!
    }
    canvas c1
    iconcoords {703.0 32.0}
    labelcoords {703.0 64.0}
    interface-peer {eth0 n4}
    services {DefaultRoute DHCPClient}
}

node n17 {
    type router
    model PC
    network-config {
	hostname n17
	!
	interface eth0
	!
    }
    canvas c1
    iconcoords {760.0 51.0}
    labelcoords {760.0 83.0}
    interface-peer {eth0 n4}
    services {DefaultRoute DHCPClient}
}

node n18 {
    type router
    model PC
    network-config {
	hostname n18
	!
	interface eth0
	!
    }
    canvas c1
    iconcoords {810.0 73.0}
    labelcoords {810.0 105.0}
    interface-peer {eth0 n4}
    services {DefaultRoute DHCPClient}
}

node n19 {
    type router
    model PC
    network-config {
	hostname n19
	!
	interface eth0
	!
    }
    canvas c1
    iconcoords {855.0 104.0}
    labelcoords {855.0 136.0}
    interface-peer {eth0 n4}
    services {DefaultRoute DHCPClient}
}

node n20 {
    type router
    model PC
    network-config {
	hostname n20
	!
	interface eth0
	!
    }
    canvas c1
    iconcoords {821.0 407.0}
    labelcoords {821.0 439.0}
    interface-peer {eth0 n5}
    services {DefaultRoute DHCPClient}
}

node n21 {
    type router
    model PC
    network-config {
	hostname n21
	!
	interface eth0
	!
    }
    canvas c1
    iconcoords {826.0 346.0}
    labelcoords {826.0 378.0}
    interface-peer {eth0 n5}
    services {DefaultRoute DHCPClient}
}

node n22 {
    type router
    model PC
    network-config {
	hostname n22
	!
	interface eth0
	!
    }
    canvas c1
    iconcoords {833.0 298.0}
    labelcoords {833.0 330.0}
    interface-peer {eth0 n5}
    services {DefaultRoute DHCPClient}
}

node n23 {
    type router
    model PC
    network-config {
	hostname n23
	!
	interface eth0
	!
    }
    canvas c1
    iconcoords {836.0 253.0}
    labelcoords {836.0 285.0}
    interface-peer {eth0 n5}
    services {DefaultRoute DHCPClient}
}

node n24 {
    type router
    model host
    network-config {
	hostname n24
	!
	interface eth0
	 ip address 10.0.0.10/24
	!
    }
    canvas c1
    iconcoords {831.0 172.0}
    labelcoords {831.0 204.0}
    interface-peer {eth0 n4}
    services {DefaultRoute DHCP}
    custom-config {
	custom-config-id service:DHCP
	custom-command DHCP
	config {
	files=('/etc/dhcp/dhcpd.conf', )
	}
    }
    custom-config {
	custom-config-id service:DHCP:/etc/dhcp/dhcpd.conf
	custom-command /etc/dhcp/dhcpd.conf
	config {
	# auto-generated by DHCP service (utility.py)
	# NOTE: move these option lines into the desired pool { } block(s) below
	#option domain-name "test.com";
	#option domain-name-servers 10.0.0.1;
	#option routers 10.0.0.1;
	
	log-facility local6;
	
	default-lease-time 600;
	max-lease-time 7200;
	
	ddns-update-style none;
	
	subnet 10.0.0.0 netmask 255.255.255.0 {
	  pool {
	    range 10.0.0.100 10.0.0.254;
	    option routers 10.0.0.1;
	  }
	}
	
	
	}
    }
}

node n25 {
    type hub
    network-config {
	hostname n25
	!
    }
    canvas c1
    iconcoords {751.0 507.0}
    labelcoords {751.0 531.0}
    interface-peer {e0 n3}
    interface-peer {e1 n15}
    interface-peer {e2 n14}
}

node n26 {
    type router
    model router
    network-config {
	hostname n26
	!
	interface eth1
	 ip address 192.168.0.2/30
	!
	interface eth0
	 ip address 10.0.3.1/24
	!
	interface eth3
	 ip address 192.168.5.1/30
	!
	interface eth2
	 ip address 192.168.1.1/30
	!
    }
    canvas c1
    iconcoords {246.0 204.0}
    labelcoords {246.0 236.0}
    interface-peer {eth0 n1}
    interface-peer {eth2 n27}
    interface-peer {eth3 n28}
    services {zebra vtysh IPForward StaticRoute}
    custom-config {
	custom-config-id service:StaticRoute
	custom-command StaticRoute
	config {
	files=('staticroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:StaticRoute:staticroute.sh
	custom-command staticroute.sh
	config {
	#!/bin/sh
	# auto-generated by StaticRoute service (utility.py)
	#
	# NOTE: this service must be customized to be of any use
	#       Below are samples that you can uncomment and edit.
	#
	#/sbin/ip route add 10.9.8.0/24 via 10.0.3.1
	#/sbin/ip route add 10.9.8.0/24 via 192.168.0.1
	#/sbin/ip route add 10.9.8.0/24 via 192.168.1.1
	#/sbin/ip route add 10.9.8.0/24 via 192.168.5.1
	/sbin/ip route add 10.0.4.0/24 via 192.168.0.1
	/sbin/ip route add 10.0.2.0/24 via 192.168.5.2
	/sbin/ip route add 10.0.0.0/24 via 192.168.1.2
	}
    }
    custom-config {
	custom-config-id service:zebra
	custom-command zebra
	config {
	files=('/usr/local/etc/quagga/Quagga.conf', 'quaggaboot.sh', '/usr/local/etc/quagga/vtysh.conf', )
	}
    }
    custom-config {
	custom-config-id service:zebra:/usr/local/etc/quagga/Quagga.conf
	custom-command /usr/local/etc/quagga/Quagga.conf
	config {
	interface eth0
	  ip address 10.0.3.1/24
	!
	interface eth2
	  ip address 192.168.1.1/30
	!
	interface eth3
	  ip address 192.168.5.1/30
	!
	
	
	}
    }
    interface-peer {eth1 n29}
}

node n27 {
    type router
    model router
    network-config {
	hostname n27
	!
	interface eth2
	 ip address 192.168.2.2/30
	!
	interface eth3
	 ip address 192.168.4.2/30
	!
	interface eth1
	 ip address 192.168.1.2/30
	!
	interface eth0
	 ip address 10.0.0.1/24
	!
    }
    canvas c1
    iconcoords {569.0 202.0}
    labelcoords {569.0 234.0}
    interface-peer {eth0 n4}
    interface-peer {eth1 n26}
    interface-peer {eth3 n29}
    services {zebra vtysh IPForward StaticRoute}
    custom-config {
	custom-config-id service:StaticRoute
	custom-command StaticRoute
	config {
	files=('staticroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:StaticRoute:staticroute.sh
	custom-command staticroute.sh
	config {
	#!/bin/sh
	# auto-generated by StaticRoute service (utility.py)
	#
	# NOTE: this service must be customized to be of any use
	#       Below are samples that you can uncomment and edit.
	#
	#/sbin/ip route add 10.9.8.0/24 via 10.0.0.1
	#/sbin/ip route add 10.9.8.0/24 via 192.168.1.1
	#/sbin/ip route add 10.9.8.0/24 via 192.168.4.1
	/sbin/ip route add 10.0.3.0/24 via 192.168.1.1
	/sbin/ip route add 10.0.4.0/24 via 192.168.4.1
	/sbin/ip route add 10.0.2.0/24 via 192.168.2.1
	}
    }
    custom-config {
	custom-config-id service:zebra
	custom-command zebra
	config {
	files=('/usr/local/etc/quagga/Quagga.conf', 'quaggaboot.sh', '/usr/local/etc/quagga/vtysh.conf', )
	}
    }
    custom-config {
	custom-config-id service:zebra:/usr/local/etc/quagga/Quagga.conf
	custom-command /usr/local/etc/quagga/Quagga.conf
	config {
	interface eth0
	  ip address 10.0.0.1/24
	!
	interface eth1
	  ip address 192.168.1.2/30
	!
	interface eth3
	  ip address 192.168.4.2/30
	!
	
	
	}
    }
    interface-peer {eth2 n28}
}

node n28 {
    type router
    model router
    network-config {
	hostname n28
	!
	interface eth1
	 ip address 192.168.2.1/30
	!
	interface eth3
	 ip address 192.168.5.2/30
	!
	interface eth2
	 ip address 192.168.3.1/30
	!
	interface eth0
	 ip address 10.0.2.1/24
	!
    }
    canvas c1
    iconcoords {568.0 423.0}
    labelcoords {568.0 455.0}
    interface-peer {eth0 n3}
    interface-peer {eth2 n29}
    interface-peer {eth3 n26}
    services {zebra vtysh IPForward StaticRoute}
    custom-config {
	custom-config-id service:StaticRoute
	custom-command StaticRoute
	config {
	files=('staticroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:StaticRoute:staticroute.sh
	custom-command staticroute.sh
	config {
	#!/bin/sh
	# auto-generated by StaticRoute service (utility.py)
	#
	# NOTE: this service must be customized to be of any use
	#       Below are samples that you can uncomment and edit.
	#
	#/sbin/ip route add 10.9.8.0/24 via 10.0.2.1
	#/sbin/ip route add 10.9.8.0/24 via 192.168.3.1
	#/sbin/ip route add 10.9.8.0/24 via 192.168.5.1
	/sbin/ip route add 10.0.0.0/24 via 192.168.2.2
	/sbin/ip route add 10.0.3.0/24 via 192.168.5.1
	/sbin/ip route add 10.0.4.0/24 via 192.168.3.2
	
	}
    }
    custom-config {
	custom-config-id service:zebra
	custom-command zebra
	config {
	files=('/usr/local/etc/quagga/Quagga.conf', 'quaggaboot.sh', '/usr/local/etc/quagga/vtysh.conf', )
	}
    }
    custom-config {
	custom-config-id service:zebra:/usr/local/etc/quagga/Quagga.conf
	custom-command /usr/local/etc/quagga/Quagga.conf
	config {
	interface eth0
	  ip address 10.0.2.1/24
	!
	interface eth2
	  ip address 192.168.3.1/30
	!
	interface eth3
	  ip address 192.168.5.2/30
	!
	
	
	}
    }
    interface-peer {eth1 n27}
}

node n29 {
    type router
    model router
    network-config {
	hostname n29
	!
	interface eth1
	 ip address 192.168.0.1/30
	!
	interface eth3
	 ip address 192.168.4.1/30
	!
	interface eth2
	 ip address 192.168.3.2/30
	!
	interface eth0
	 ip address 10.0.4.1/24
	!
    }
    canvas c1
    iconcoords {243.0 423.0}
    labelcoords {243.0 455.0}
    interface-peer {eth0 n2}
    interface-peer {eth2 n28}
    interface-peer {eth3 n27}
    services {zebra vtysh IPForward StaticRoute}
    custom-config {
	custom-config-id service:StaticRoute
	custom-command StaticRoute
	config {
	files=('staticroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:StaticRoute:staticroute.sh
	custom-command staticroute.sh
	config {
	#!/bin/sh
	# auto-generated by StaticRoute service (utility.py)
	#
	# NOTE: this service must be customized to be of any use
	#       Below are samples that you can uncomment and edit.
	#
	#/sbin/ip route add 10.9.8.0/24 via 10.0.4.1
	#/sbin/ip route add 10.9.8.0/24 via 192.168.0.1
	#/sbin/ip route add 10.9.8.0/24 via 192.168.3.1
	#/sbin/ip route add 10.9.8.0/24 via 192.168.4.1
	/sbin/ip route add 10.0.3.0/24 via 192.168.0.2
	/sbin/ip route add 10.0.0.0/24 via 192.168.4.2
	/sbin/ip route add 10.0.2.0/24 via 192.168.3.1
	
	}
    }
    custom-config {
	custom-config-id service:zebra
	custom-command zebra
	config {
	files=('/usr/local/etc/quagga/Quagga.conf', 'quaggaboot.sh', '/usr/local/etc/quagga/vtysh.conf', )
	}
    }
    custom-config {
	custom-config-id service:zebra:/usr/local/etc/quagga/Quagga.conf
	custom-command /usr/local/etc/quagga/Quagga.conf
	config {
	interface eth0
	  ip address 10.0.4.1/24
	!
	interface eth2
	  ip address 192.168.3.2/30
	!
	interface eth3
	  ip address 192.168.4.1/30
	!
	
	}
    }
    interface-peer {eth1 n26}
}

link l1 {
    nodes {n16 n4}
    bandwidth 0
}

link l2 {
    nodes {n17 n4}
    bandwidth 0
}

link l3 {
    nodes {n18 n4}
    bandwidth 0
}

link l4 {
    nodes {n19 n4}
    bandwidth 0
}

link l5 {
    nodes {n24 n4}
    bandwidth 0
}

link l6 {
    nodes {n23 n5}
    bandwidth 0
}

link l7 {
    nodes {n22 n5}
    bandwidth 0
}

link l8 {
    nodes {n21 n5}
    bandwidth 0
}

link l9 {
    nodes {n20 n5}
    bandwidth 0
}

link l10 {
    nodes {n11 n3}
    bandwidth 0
}

link l11 {
    nodes {n12 n3}
    bandwidth 0
}

link l12 {
    nodes {n13 n3}
    bandwidth 0
}

link l13 {
    nodes {n6 n1}
    bandwidth 0
}

link l14 {
    nodes {n7 n1}
    bandwidth 0
}

link l15 {
    nodes {n8 n2}
    bandwidth 0
}

link l16 {
    nodes {n9 n2}
    bandwidth 0
}

link l17 {
    nodes {n10 n2}
    bandwidth 0
}

link l21 {
    nodes {n5 n4}
    bandwidth 0
}

link l22 {
    nodes {n1 n26}
    bandwidth 0
}

link l23 {
    nodes {n2 n29}
    bandwidth 0
}

link l24 {
    nodes {n3 n28}
    bandwidth 0
}

link l25 {
    nodes {n4 n27}
    bandwidth 0
}

link l27 {
    nodes {n26 n27}
    bandwidth 0
}

link l29 {
    nodes {n28 n29}
    bandwidth 0
}

link l30 {
    nodes {n29 n27}
    bandwidth 0
}

link l31 {
    nodes {n26 n28}
    bandwidth 0
}

link l18 {
    nodes {n3 n25}
    bandwidth 0
}

link l19 {
    nodes {n15 n25}
    bandwidth 0
}

link l20 {
    nodes {n14 n25}
    bandwidth 0
}

link l26 {
    nodes {n29 n26}
    bandwidth 0
}

link l28 {
    nodes {n28 n27}
    bandwidth 0
}

annotation a1 {
    iconcoords {308.0 84.0}
    type text
    label {Topologia E (ESTATICO)}
    labelcolor black
    fontfamily {Arial}
    fontsize {12}
    effects {bold}
    canvas c1
}

annotation a2 {
    type text
    iconcoords {519.0 172.0}
    label {}
    canvas c1
}

annotation a3 {
    iconcoords {6.0 50.0 191.0 317.0}
    type rectangle
    label {}
    labelcolor black
    fontfamily {Arial}
    fontsize 12
    color #C0C0FF
    width 0
    border #b80000
    rad 25
    canvas c1
}

annotation a4 {
    iconcoords {6.0 470.0 351.0 634.0}
    type rectangle
    label {}
    labelcolor black
    fontfamily {Arial}
    fontsize 12
    color #C0C0FF
    width 0
    border #008b00
    rad 25
    canvas c1
}

annotation a5 {
    iconcoords {632.0 12.0 921.0 436.0}
    type rectangle
    label {}
    labelcolor black
    fontfamily {Arial}
    fontsize 12
    color #C0C0FF
    width 0
    border black
    rad 25
    canvas c1
}

annotation a6 {
    iconcoords {472.0 482.0 922.0 635.0}
    type rectangle
    label {}
    labelcolor black
    fontfamily {Arial}
    fontsize 12
    color #C0C0FF
    width 0
    border black
    rad 25
    canvas c1
}

canvas c1 {
    name {Canvas1}
}

option global {
    interface_names no
    ip_addresses yes
    ipv6_addresses yes
    node_labels yes
    link_labels yes
    show_api no
    background_images no
    annotations yes
    grid yes
    traffic_start 0
}

option session {
}

